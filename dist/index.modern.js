import{useEffect as e}from"react";function t(){const t=[{offsetType:"up",operate:"--animation-offsetup",valueIndex:0,valueDirection:""},{offsetType:"down",operate:"--animation-offsetdown",valueIndex:0,valueDirection:"-"},{offsetType:"left",operate:"--animation-offsetleft",valueIndex:1,valueDirection:"-"},{offsetType:"right",operate:"--animation-offsetright",valueIndex:1,valueDirection:""},{offsetType:"top",operate:"--animation-offsettop",valueIndex:0,valueDirection:"-"},{offsetType:"bottom",operate:"--animation-offsetbottom",valueIndex:0,valueDirection:""}],o=(e,o,a)=>{const n=e,i=a.split(",");t.map(e=>{n.includes(e.offsetType)&&(console.log(e.operate,e.valueDirection+i[e.valueIndex]+"%"),o.style.setProperty(e.operate,e.valueDirection+i[e.valueIndex]+"%"))})};e(()=>{const e=new IntersectionObserver(e=>{e.forEach((e,t)=>{if(e.isIntersecting){const a=e.target.getAttribute("scroll-animate"),n=e.target.getAttribute("scroll-animate-duration"),i=e.target.getAttribute("scroll-animate-offset");console.log(t),setTimeout(function(){e.target.classList.add(a),console.log(e.target.classList);const t=document.querySelector("."+a);setTimeout(function(){i&&o(a,t,i)},400),n&&t.style.setProperty("--animation-duration",n+"s")},300),e.target.addEventListener("animationend",()=>{e.target.classList.remove(a)})}})},{rootMargin:"0px",threshold:[.3],once:!0}),t=document.querySelectorAll("[scroll-animate]");for(let o=0;o<t.length;o++)e.observe(t[o])},[])}export{t as default};
//# sourceMappingURL=index.modern.js.map
