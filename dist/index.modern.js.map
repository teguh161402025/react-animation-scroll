{"version":3,"file":"index.modern.js","sources":["../src/index.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport './scroll-animate.css'\r\nfunction ScrollAnimate() {\r\n\r\n    let valueX;\r\n    let valueY;\r\n    let Valuedeg;\r\n    const offset = [\r\n        {\r\n            'offsetType': 'up',\r\n            'operate': '--animation-offsetup',\r\n            'valueIndex': 0,\r\n            'valueDirection': ''\r\n        },\r\n        {\r\n            'offsetType': 'down',\r\n            'operate': '--animation-offsetdown',\r\n            'valueIndex': 0,\r\n            'valueDirection': '-'\r\n        },\r\n\r\n        {\r\n            'offsetType': 'left',\r\n            'operate': '--animation-offsetleft',\r\n            'valueIndex': 1,\r\n            'valueDirection': '-'\r\n        },\r\n        {\r\n            'offsetType': 'right',\r\n            'operate': '--animation-offsetright',\r\n            'valueIndex': 1,\r\n            'valueDirection': ''\r\n        },\r\n        {\r\n            'offsetType': 'top',\r\n            'operate': '--animation-offsettop',\r\n            'valueIndex': 0,\r\n            'valueDirection': '-'\r\n        },\r\n        {\r\n            'offsetType': 'bottom',\r\n            'operate': '--animation-offsetbottom',\r\n            'valueIndex': 0,\r\n            'valueDirection': ''\r\n        },\r\n\r\n\r\n    ]\r\n\r\n    const offsetHandler = (animate, ele, offsetValue) => {\r\n\r\n        const animateString = animate\r\n        const value = offsetValue.split(',');\r\n\r\n        // ValueDeg = value[2];\r\n\r\n        offset.map(a => {\r\n\r\n            if (animateString.includes(a.offsetType)) {\r\n\r\n                console.log(a.operate, a.valueDirection + value[a.valueIndex] + '%')\r\n\r\n                ele.style.setProperty(a.operate, a.valueDirection + value[a.valueIndex] + '%');\r\n\r\n            }\r\n        }\r\n\r\n        )\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        const option = {\r\n            rootMargin: '0px',\r\n            threshold: [0.3],\r\n            once: true\r\n\r\n        };\r\n\r\n        const observer = new IntersectionObserver((entries) => {\r\n            entries.forEach((a, index) => {\r\n\r\n                if (a.isIntersecting) {\r\n\r\n                    const animate = a.target.getAttribute('scroll-animate');\r\n                    const duration = a.target.getAttribute('scroll-animate-duration');\r\n                    const offset = a.target.getAttribute('scroll-animate-offset')\r\n                    const defaultDuration = '1';\r\n                    console.log(index)\r\n                    setTimeout(function () {\r\n                        a.target.classList.add(animate)\r\n                        console.log(a.target.classList)\r\n                        const ele = document.querySelector('.' + animate)\r\n                        setTimeout(function () {\r\n                            if (offset) {\r\n\r\n                                offsetHandler(animate, ele, offset)\r\n                            }\r\n                        }\r\n                            , 400)\r\n\r\n                        if (duration) {\r\n                            ele.style.setProperty('--animation-duration', duration + 's');\r\n                        }\r\n\r\n\r\n                    }, 300);\r\n\r\n                    a.target.addEventListener('animationend', () => {\r\n                        a.target.classList.remove(animate);\r\n\r\n                    });\r\n\r\n\r\n\r\n\r\n                }\r\n            })\r\n\r\n        }, option);\r\n\r\n        const divElements = document.querySelectorAll('[scroll-animate]');\r\n\r\n        for (let i = 0; i < divElements.length; i++) {\r\n\r\n            observer.observe(divElements[i]);\r\n        }\r\n\r\n\r\n    }, [])\r\n}\r\n\r\nexport default ScrollAnimate"],"names":["ScrollAnimate","offset","offsetType","operate","valueIndex","valueDirection","offsetHandler","animate","ele","offsetValue","animateString","value","split","map","a","includes","console","log","style","setProperty","useEffect","observer","IntersectionObserver","entries","forEach","index","isIntersecting","target","getAttribute","duration","setTimeout","classList","add","document","querySelector","addEventListener","remove","rootMargin","threshold","once","divElements","querySelectorAll","i","length","observe"],"mappings":"kCAEA,SAASA,IAKL,MAAMC,EAAS,CACX,CACIC,WAAc,KACdC,QAAW,uBACXC,WAAc,EACdC,eAAkB,IAEtB,CACIH,WAAc,OACdC,QAAW,yBACXC,WAAc,EACdC,eAAkB,KAGtB,CACIH,WAAc,OACdC,QAAW,yBACXC,WAAc,EACdC,eAAkB,KAEtB,CACIH,WAAc,QACdC,QAAW,0BACXC,WAAc,EACdC,eAAkB,IAEtB,CACIH,WAAc,MACdC,QAAW,wBACXC,WAAc,EACdC,eAAkB,KAEtB,CACIH,WAAc,SACdC,QAAW,2BACXC,WAAc,EACdC,eAAkB,KAMpBC,EAAgBA,CAACC,EAASC,EAAKC,KAEjC,MAAMC,EAAgBH,EAChBI,EAAQF,EAAYG,MAAM,KAIhCX,EAAOY,IAAIC,IAEHJ,EAAcK,SAASD,EAAEZ,cAEzBc,QAAQC,IAAIH,EAAEX,QAASW,EAAET,eAAiBM,EAAMG,EAAEV,YAAc,KAEhEI,EAAIU,MAAMC,YAAYL,EAAEX,QAASW,EAAET,eAAiBM,EAAMG,EAAEV,YAAc,KAE9E,EAKR,EAEAgB,EAAU,KACN,MAOMC,EAAW,IAAIC,qBAAsBC,IACvCA,EAAQC,QAAQ,CAACV,EAAGW,KAEhB,GAAIX,EAAEY,eAAgB,CAElB,MAAMnB,EAAUO,EAAEa,OAAOC,aAAa,kBAChCC,EAAWf,EAAEa,OAAOC,aAAa,2BACjC3B,EAASa,EAAEa,OAAOC,aAAa,yBAErCZ,QAAQC,IAAIQ,GACZK,WAAW,WACPhB,EAAEa,OAAOI,UAAUC,IAAIzB,GACvBS,QAAQC,IAAIH,EAAEa,OAAOI,WACrB,MAAMvB,EAAMyB,SAASC,cAAc,IAAM3B,GACzCuB,WAAW,WACH7B,GAEAK,EAAcC,EAASC,EAAKP,EAEpC,EACM,KAEF4B,GACArB,EAAIU,MAAMC,YAAY,uBAAwBU,EAAW,IAIjE,EAAG,KAEHf,EAAEa,OAAOQ,iBAAiB,eAAgB,KACtCrB,EAAEa,OAAOI,UAAUK,OAAO7B,EAE9B,EAKJ,GAGR,EA/Ce,CACX8B,WAAY,MACZC,UAAW,CAAC,IACZC,MAAM,IA8CJC,EAAcP,SAASQ,iBAAiB,oBAE9C,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAYG,OAAQD,IAEpCrB,EAASuB,QAAQJ,EAAYE,GACjC,EAGD,GACP"}